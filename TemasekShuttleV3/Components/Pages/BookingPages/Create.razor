@page "/bookings/create"
@using Microsoft.EntityFrameworkCore
@using TemasekShuttleV3.Domain
@inject IDbContextFactory<TemasekShuttleV3.Data.TemasekShuttleV3Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Booking</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Booking" OnValidSubmit="AddBooking" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="bustime" class="form-label">BusTime:</label> 
                <InputDate id="bustime" @bind-Value="Booking.BusTime" class="form-control" /> 
                <ValidationMessage For="() => Booking.BusTime" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="buslocation" class="form-label">BusLocation:</label> 
                <InputText id="buslocation" @bind-Value="Booking.BusLocation" class="form-control" /> 
                <ValidationMessage For="() => Booking.BusLocation" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="customerid" class="form-label">CustomerId:</label> 
                <InputNumber id="customerid" @bind-Value="Booking.CustomerId" class="form-control" /> 
                <ValidationMessage For="() => Booking.CustomerId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="scheduleoccurrenceid" class="form-label">ScheduleOccurrenceId:</label> 
                <InputNumber id="scheduleoccurrenceid" @bind-Value="Booking.ScheduleOccurrenceId" class="form-control" /> 
                <ValidationMessage For="() => Booking.ScheduleOccurrenceId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/bookings">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Booking Booking { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddBooking()
    {
        using var context = DbFactory.CreateDbContext();
        context.Booking.Add(Booking);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/bookings");
    }
}
