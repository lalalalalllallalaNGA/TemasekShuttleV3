@page "/schedules/details"
@using Microsoft.EntityFrameworkCore
@using TemasekShuttleV3.Domain
@inject IDbContextFactory<TemasekShuttleV3.Data.TemasekShuttleV3Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Schedule</h2>
    <hr />
    @if (schedule is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">BusScheduleDate</dt>
            <dd class="col-sm-10">@schedule.BusScheduleDate</dd>
            <dt class="col-sm-2">BusScheduleTime</dt>
            <dd class="col-sm-10">@schedule.BusScheduleTime</dd>
            <dt class="col-sm-2">ScheduleLocation</dt>
            <dd class="col-sm-10">@schedule.ScheduleLocation</dd>
            <dt class="col-sm-2">DriverDate</dt>
            <dd class="col-sm-10">@schedule.DriverDate</dd>
            <dt class="col-sm-2">DriverTime</dt>
            <dd class="col-sm-10">@schedule.DriverTime</dd>
            <dt class="col-sm-2">SpareDriver</dt>
            <dd class="col-sm-10">@schedule.SpareDriver</dd>
            <dt class="col-sm-2">DriverId</dt>
            <dd class="col-sm-10">@schedule.DriverId</dd>
        </dl>
        <div>
            <a href="@($"/schedules/edit?id={schedule.Id}")">Edit</a> |
            <a href="@($"/schedules")">Back to List</a>
        </div>
    }
</div>

@code {
    private Schedule? schedule;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        schedule = await context.Schedule.FirstOrDefaultAsync(m => m.Id == Id);

        if (schedule is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
